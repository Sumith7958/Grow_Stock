import { useTheme } from '@mui/material/styles';
import { Card, Grid, Typography,Avatar } from '@mui/material';
import KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';
import KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';
import Chart from 'react-apexcharts';


//const originalArray = [962.26, 960.36, 968.89, 972.09, 964.15, 967.35, 975.78, 965.73, 965.35, 958.24, 962.98, 959.56, 969.99, 982.56, 981.76, 992.04, 986.5, 981.34, 987.0, 994.14, 1003.64, 1008.63, 1016.64, 1009.43, 1011.62, 1003.84, 994.31, 992.74, 981.57, 990.79, 1002.12, 1018.83, 1014.04, 1021.9, 1067.35, 1052.96, 1020.83, 1029.51, 1026.39, 1028.81, 1022.4, 1018.88, 1019.66, 1013.47, 1016.44, 1012.55, 1007.33, 1009.5, 1025.79, 1026.52, 1039.36, 1045.15, 1044.52, 1053.95, 1063.06, 1051.88, 1034.32, 1032.8, 1049.44, 1059.52, 1055.23, 1060.46, 1070.82, 1071.74, 1080.57, 1088.03, 1082.02, 1085.96, 1085.68, 1090.62, 1092.09, 1075.83, 1077.48, 1082.76, 1093.87, 1098.63, 1082.54, 1087.33, 1076.95, 1062.73, 1058.47, 1054.8, 1063.08, 1065.8, 1056.9, 1054.88, 1043.5, 1042.23, 1035.54, 1036.37, 1045.77, 1045.7, 1037.64, 1032.63, 1037.91, 1045.1, 1036.94, 1030.76, 1028.31, 1035.22, 1023.62, 1020.65, 1023.82, 1026.19, 1018.31, 997.98, 1003.69, 1012.55, 993.89];
//const value=[18499.35, 18598.65, 18633.85, 18534.4, 18487.75, 18534.1, 18593.85, 18599.0, 18726.4, 18634.55, 18563.4, 18601.5, 18716.15, 18755.9, 18688.1, 18826.0, 18755.45, 18816.7, 18856.85, 18771.25, 18665.5, 18691.2, 18817.4, 18972.1, 19189.05, 19322.55, 19389.0, 19398.5, 19497.3, 19331.8, 19355.9, 19439.4, 19384.3, 19413.75, 19564.5, 19711.45, 19749.25, 19833.15, 19979.15, 19745.0, 19672.35, 19680.6, 19778.3, 19659.9, 19646.05, 19753.8, 19733.55, 19526.55, 19381.65, 19517.0, 19597.3, 19570.85, 19632.55, 19543.1, 19428.3, 19434.55, 19465.0, 19365.25, 19310.15, 19393.6, 19396.45, 19444.0, 19386.7, 19265.8, 19306.05, 19342.65, 19347.45, 19253.8, 19435.3, 19528.8, 19574.9, 19611.05, 19727.05, 19819.95, 19996.35, 19993.2, 20070.0, 20103.1, 20192.35, 20133.3, 19901.4, 19742.35, 19674.25, 19674.55, 19664.7, 19716.45, 19523.55, 19638.3, 19528.75, 19436.1, 19545.75, 19653.5, 19512.35, 19689.85, 19811.35, 19794.0, 19751.05, 19731.75, 19811.5, 19671.1, 19624.7, 19542.65, 19281.75, 19122.15, 18857.25, 19047.25, 19140.9, 19079.6, 18989.15, 19133.25, 19230.6, 19411.75, 19406.7, 19443.5, 19395.3, 19425.35, 19443.55, 19675.45, 19765.2, 19731.8, 19694.0, 19783.4, 19811.85, 19802.0, 19794.7, 19889.7, 20096.6, 20133.15, 20267.9, 20686.8, 20855.1, 20937.7, 20901.15, 20969.4, 20997.1, 20906.4, 20926.35, 21182.7, 21456.65, 21418.65, 21453.1, 21150.15, 21255.05, 21349.4, 21441.35, 21654.75, 21778.7, 21731.4, 21741.9, 21665.8, 21517.35, 21658.6, 21710.8, 21513.0, 21544.85, 21618.7, 21647.2, 21894.55, 22097.45, 22032.3, 21571.95, 21462.25, 21622.4, 21238.8, 21453.95, 21352.6, 21737.6, 21522.1, 21725.7, 21697.45, 21853.8, 21771.7, 21929.4, 21930.5, 21717.95, 21782.5, 21616.05, 21743.25, 21840.05, 21910.75, 22040.7, 22122.25, 22196.95, 22055.05, 22217.45, 22212.7, 22122.05, 22198.35, 21951.15, 21982.8, 22338.75, 22405.6, 22356.3, 22474.05, 22493.55, 22332.65, 22335.7, 21997.7, 22146.65, 22023.35, 22055.7, 21817.45, 21839.1, 22011.95, 22096.75, 22004.7, 22123.65, 22326.9, 22462.0, 22453.3, 22434.65, 22514.65, 22513.7, 22666.3, 22642.75, 22753.8, 22519.4, 22272.5, 22147.9, 21995.85, 22147.0, 22336.4, 22368.0, 22402.4, 22570.35, 22419.95, 22643.4, 22604.85, 22648.2, 22475.85, 22442.7, 22302.5, 22302.5, 21957.5, 22055.2, 22104.05, 22217.85, 22200.55, 22403.85, 22466.1, 22529.05, 22597.8, 22967.65, 22957.1]
//const dates=["26-05-2023", "29-05-2023", "30-05-2023", "31-05-2023", "01-06-2023", "02-06-2023", "05-06-2023", "06-06-2023", "07-06-2023", "08-06-2023", "09-06-2023", "12-06-2023", "13-06-2023", "14-06-2023", "15-06-2023", "16-06-2023", "19-06-2023", "20-06-2023", "21-06-2023", "22-06-2023", "23-06-2023", "26-06-2023", "27-06-2023", "28-06-2023", "30-06-2023", "03-07-2023", "04-07-2023", "05-07-2023", "06-07-2023", "07-07-2023", "10-07-2023", "11-07-2023", "12-07-2023", "13-07-2023", "14-07-2023", "17-07-2023", "18-07-2023", "19-07-2023", "20-07-2023", "21-07-2023", "24-07-2023", "25-07-2023", "26-07-2023", "27-07-2023", "28-07-2023", "31-07-2023", "01-08-2023", "02-08-2023", "03-08-2023", "04-08-2023", "07-08-2023", "08-08-2023", "09-08-2023", "10-08-2023", "11-08-2023", "14-08-2023", "16-08-2023", "17-08-2023", "18-08-2023", "21-08-2023", "22-08-2023", "23-08-2023", "24-08-2023", "25-08-2023", "28-08-2023", "29-08-2023", "30-08-2023", "31-08-2023", "01-09-2023", "04-09-2023", "05-09-2023", "06-09-2023", "07-09-2023", "08-09-2023", "11-09-2023", "12-09-2023", "13-09-2023", "14-09-2023", "15-09-2023", "18-09-2023", "20-09-2023", "21-09-2023", "22-09-2023", "25-09-2023", "26-09-2023", "27-09-2023", "28-09-2023", "29-09-2023", "03-10-2023", "04-10-2023", "05-10-2023", "06-10-2023", "09-10-2023", "10-10-2023", "11-10-2023", "12-10-2023", "13-10-2023", "16-10-2023", "17-10-2023", "18-10-2023", "19-10-2023", "20-10-2023", "23-10-2023", "25-10-2023", "26-10-2023", "27-10-2023", "30-10-2023", "31-10-2023", "01-11-2023", "02-11-2023", "03-11-2023", "06-11-2023", "07-11-2023", "08-11-2023", "09-11-2023", "10-11-2023", "13-11-2023", "15-11-2023", "16-11-2023", "17-11-2023", "20-11-2023", "21-11-2023", "22-11-2023", "23-11-2023", "24-11-2023", "28-11-2023", "29-11-2023", "30-11-2023", "01-12-2023", "04-12-2023", "05-12-2023", "06-12-2023", "07-12-2023", "08-12-2023", "11-12-2023", "12-12-2023", "13-12-2023", "14-12-2023", "15-12-2023", "18-12-2023", "19-12-2023", "20-12-2023", "21-12-2023", "22-12-2023", "26-12-2023", "27-12-2023", "28-12-2023", "29-12-2023", "01-01-2024", "02-01-2024", "03-01-2024", "04-01-2024", "05-01-2024", "08-01-2024", "09-01-2024", "10-01-2024", "11-01-2024", "12-01-2024", "15-01-2024", "16-01-2024", "17-01-2024", "18-01-2024", "19-01-2024", "23-01-2024", "24-01-2024", "25-01-2024", "29-01-2024", "30-01-2024", "31-01-2024", "01-02-2024", "02-02-2024", "05-02-2024", "06-02-2024", "07-02-2024", "08-02-2024", "09-02-2024", "12-02-2024", "13-02-2024", "14-02-2024", "15-02-2024", "16-02-2024", "19-02-2024", "20-02-2024", "21-02-2024", "22-02-2024", "23-02-2024", "26-02-2024", "27-02-2024", "28-02-2024", "29-02-2024", "01-03-2024", "04-03-2024", "05-03-2024", "06-03-2024", "07-03-2024", "11-03-2024", "12-03-2024", "13-03-2024", "14-03-2024", "15-03-2024", "18-03-2024", "19-03-2024", "20-03-2024", "21-03-2024", "22-03-2024", "26-03-2024", "27-03-2024", "28-03-2024", "01-04-2024", "02-04-2024", "03-04-2024", "04-04-2024", "05-04-2024", "08-04-2024", "09-04-2024", "10-04-2024", "12-04-2024", "15-04-2024", "16-04-2024", "18-04-2024", "19-04-2024", "22-04-2024", "23-04-2024", "24-04-2024", "25-04-2024", "26-04-2024", "29-04-2024", "30-04-2024", "02-05-2024", "03-05-2024", "06-05-2024", "07-05-2024", "08-05-2024", "09-05-2024", "10-05-2024", "13-05-2024", "14-05-2024", "15-05-2024", "16-05-2024", "17-05-2024", "21-05-2024", "22-05-2024", "23-05-2024", "24-05-2024"]

const ChartCard = ({data}) => {
  console.log(data)

  const num=data.percent
  const dates=data.date
  const value=data.value

  const chartData = {
    type: 'area',
    height: 200,
    options: {
      chart: {
        id: 'support-chart',
        sparkline: {
          enabled: true
        }
      },
      // colors:['#673AB7'],
      xaxis: {
        categories: dates
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        curve: 'smooth',
        width: 2
      },
      tooltip: {
        fixed: {
          enabled: false
        },
        x: {
          format: 'dd/MM/yy HH:mm'
        },
        y: {
          title: 'Ticket '
        },
        marker: {
          show: false
        },
        theme: 'dark'
      }
    },
    
    series: [
      { 
        name:'',
        data: value
      }
    ]
  };


  const theme = useTheme();

  return (
    <Card sx={{border:'2px solid',borderColor: theme.palette.primary[200] + 25}}>
      <Grid container sx={{ p: 2, pb: 2, color: '#fff' }}>
        <Grid item xs={12}>
          <Grid container alignItems="center" justifyContent="space-between">
            <Grid item>
              <Grid container spacing={0.5}>
                <Grid item>
                  <Typography variant="h4" sx={{ color: theme.palette.grey[800] }}>{data.name}</Typography>
                </Grid>
                <Grid item>
                  <Typography variant="h4" sx={{ color: num > 0 ? theme.palette.success.dark : theme.palette.error.dark }}>({num}%) </Typography>
                
                </Grid>
              </Grid>
            </Grid>
            <Grid item>
              <Grid container>
                <Grid item>
                  <Typography variant="h4" sx={{ color: num > 0 ? theme.palette.success.dark : theme.palette.error.dark }}>
                    {data.price}
                  </Typography>
                </Grid>
                <Grid item>
                  {num>0 ? (
                    <Avatar
                    variant="rounded"
                    sx={{
                      width: 18,
                      height: 18,
                      borderRadius: '5px',
                      backgroundColor: theme.palette.success.light,
                      color: theme.palette.success.dark,
                      ml: 0.5
                    }}
                  >
                    <KeyboardArrowUpOutlinedIcon fontSize="small" color="inherit" />
                  </Avatar>
                  ) : (
                    <Avatar
                    variant="rounded"
                    sx={{
                      width: 18,
                      height: 18,
                      borderRadius: '5px',
                      backgroundColor: theme.palette.orange.light,
                      color: theme.palette.orange.dark,
                      marginLeft: 0.5
                    }}
                  >
                    <KeyboardArrowDownOutlinedIcon fontSize="small" color="inherit" />
                  </Avatar>
                  )}
                  
                </Grid>
              </Grid>
            </Grid>
          </Grid>
        </Grid>
      </Grid>
      <Card sx={{ p:1,pb:0}}>
        <Chart {...chartData} />
      </Card>
      
    </Card>
  );
};

export default ChartCard;